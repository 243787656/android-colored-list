/**
 * The MIT License (MIT)
 * <p/>
 * Copyright (c) 2016 Smarttie Software, Inc.
 * <p/>
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * <p/>
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * <p/>
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

package com.smarttie.coloredlist.lib.widget;

import android.content.Context;
import android.support.v7.widget.RecyclerView;

import com.smarttie.coloredlist.lib.manager.ColorTheme;
import com.smarttie.coloredlist.lib.manager.ColoredListManager;

/**
 * Base Adapter used along with a RecycleView to generate a colored list of elements.
 * This adapter provides specific methods to use when binding a view for a specific
 * position, to tint the view with the proper color corresponding for that position.
 */
public abstract class ColoredListAdapter<VH extends RecyclerView.ViewHolder> extends
        RecyclerView.Adapter<VH>
{
    private static final String TAG = "ColoredListAdapter";
    private ColoredListManager mColoredListManager;


    /**
     * Returns the {@code ColoredListManager} used to tint the list generated by this
     * adapter.
     *
     * @return the {@code ColoredListManager} used to tint the list
     */
    public ColoredListManager getColoredListManager()
    {
        return mColoredListManager;
    }

    /**
     * Constructs a new instance of {@code ColoredListAdapter} with the specified
     * color theme.
     *
     * @param contexts   the context to access resources
     * @param colorTheme the color theme so use to tint the views for specific positions
     */
    public ColoredListAdapter(Context contexts, ColorTheme colorTheme)
    {
        mColoredListManager = new ColoredListManager(contexts, colorTheme);
        registerAdapterDataObserver(mDataObserver);
    }

    /**
     * Returns the color for the specified position based on the color degradation
     *
     * @param position the position of the view in the list to be colored
     * @return the proper color to use to tint the view in the specified position
     */
    public int getColor(int position)
    {
        return mColoredListManager.getColor(position);
    }

    /**
     * Specifies the base color theme used to color the list filled by this adapter
     *
     * @param theme the base color theme
     */
    public void setColorTheme(ColorTheme theme)
    {
        mColoredListManager.setColorTheme(theme);
        notifyDataSetChanged();
    }

    private RecyclerView.AdapterDataObserver mDataObserver
            = new RecyclerView.AdapterDataObserver()
    {
        @Override
        public void onChanged()
        {
            super.onChanged();
            mColoredListManager.updateListLength(getItemCount());
        }
    };
}